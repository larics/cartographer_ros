# This is a basic workflow to help you get started with Actions

name: Noetic

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ larics-master ]
    paths-ignore: 
      - '**/README.md'
  pull_request:
    branches: [ larics-master ]

  schedule:
    - cron:  '0 0 * * *' # at the end of every day

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  cancel:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

   # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    needs: cancel

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo and submodules
        uses: actions/checkout@v2
        with:
          submodules: true

      # Runs a single command using the runners shell
      - name: Install
        run: |
          git clone https://github.com/larics/uav_ros_cartographer.git
          ./uav_ros_cartographer/installation/install_and_setup_workspace.sh
          cd uav_ros_cartographer/ros_packages/cartographer_ros
          git checkout $GITHUB_SHA

      # Runs a single command using the runners shell
      - name: Catkin Build
        run: |
          cd ~/carto_ws
          source /opt/ros/noetic/setup.bash
          catkin build --limit-status-rate 0.2

      - name: Run Cartographer-ROS Tests
        if: always()
        run: |
          cd ~/carto_ws/src
          source /opt/ros/melodic/setup.bash
          catkin build cartographer_ros --limit-status-rate 0.2 --catkin-make-args run_tests
          cd ~/carto_ws
          catkin_test_results build/cartographer_ros
